name: NixOS build and deploy config

on:
  workflow_dispatch:
  # We cannot include the paths-ignore part here because this check is set as
  # required for PRs. Otherwise the PR cannot be merged when this workflow does
  # not run.
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    paths-ignore:
      - 'install.sh'
      - 'README.md'
      - '.gitignore'

jobs:

  update_nixos_robot_keys:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout the NixOS repo
        uses: 'actions/checkout@v2'
        with:
          persist-credentials: false

      - name: Checkout the NixOS-EMN-Config repo
        uses: 'actions/checkout@v2'
        with:
          repository: 'thierry-kosamera/emn-org-config'
          path: 'org-config'
          ssh-key: '${{ secrets.NIXOS_EMN_CONFIG_DEPLOY_KEY }}'
          persist-credentials: false

      - name: Install the Nix package manager
        uses: cachix/install-nix-action@master
        with:
          nix_path: nixpkgs=https://nix-channel-redirect.ocb.msf.org/nixexprs.tar.xz

      # - name: Update the NixOS Robot SSH keys (dry run)
      #   run: >-
      #     nix-shell ./scripts/python_nixostools/shell.nix --run
      #     "update_nixos_keys
      #     --api_token ${{ secrets.NIXOS_EMN_KEY_MGMT_API_TOKEN }}
      #     --nixos_config_dir   './org-config'
      #     --tunnel_config_path './org-config/json/tunnels.d'
      #     --dry_run"


  encrypt_secrets:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout the NixOS repo
        uses: 'actions/checkout@v2'
        with:
          persist-credentials: false

      - name: Checkout the NixOS-EMN-Config repo
        uses: 'actions/checkout@v2'
        with:
          repository: 'thierry-kosamera/emn-org-config@master'
          path: 'org-config'
          ssh-key: '${{ secrets.NIXOS_EMN_CONFIG_DEPLOY_KEY }}'
          persist-credentials: false

      - name: Install the Nix package manager
        uses: cachix/install-nix-action@master
        with:
          nix_path: nixpkgs=https://nix-channel-redirect.ocb.msf.org/nixexprs.tar.xz

      - name: Generate the new generated secrets files
        run: >-
          nix-shell ./scripts/python_nixostools/shell.nix --run
          "encrypt_server_secrets
          --ansible_vault_passwd '${{ secrets.NIXOS_SECRET_MANAGEMENT_VAULT_KEY }}'
          --output_path        './org-config/secrets/generated/'
          --secrets_directory  './org-config/secrets/'
          --tunnel_config_path './org-config/json/tunnels.d'"


  build:
    runs-on: 'ubuntu-latest'
    needs:
      - encrypt_secrets
      - update_nixos_robot_keys
    strategy:
      matrix:
        # When changing these settings, you need to change as well
        # the required checks in the branch protection policy on GitHub !!
        group_count: [ 5 ]
        group_id: [ 0, 1, 2, 3, 4 ]
    steps:
      - name: Checkout the NixOS repo
        uses: 'actions/checkout@v2'
        with:
          persist-credentials: false

      - name: Checkout the Nixos-EMN-Config repo
        uses: 'actions/checkout@v2'
        with:
          repository: 'thierry-kosamera/emn-org-config'
          path: 'org-config'
          ssh-key: '${{ secrets.NIXOS_EMN_CONFIG_DEPLOY_KEY }}'
          persist-credentials: false

      - name: Install the Nix package manager
        uses: 'cachix/install-nix-action@master'
        with:
          nix_path: 'nixpkgs=https://nix-channel-redirect.ocb.msf.org/nixexprs.tar.xz'

      - name: Configure the Panic Button Cachix cache
        uses: 'cachix/cachix-action@master'
        with:
          name: 'panic-button'
          skipPush: true
        continue-on-error: true

      - name: Build the NixOS configurations
        run: >-
          nix-shell ./scripts/python_nixostools/shell.nix --run
          "build_nixos_configs
          --group_amount ${{ matrix.group_count }}
          --group_id ${{ matrix.group_id }}"


  build_iso:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout the NixOS repo
        uses: 'actions/checkout@v2'
        with:
          persist-credentials: false

      - name: Checkout the NixOS-EMN-Config repo
        uses: 'actions/checkout@v2'
        with:
          repository: 'thierry-kosamera/emn-org-config'
          path: 'org-config'
          ssh-key: '${{ secrets.NIXOS_EMN_CONFIG_DEPLOY_KEY }}'
          persist-credentials: false

      - name: Install the Nix package manager
        uses: 'cachix/install-nix-action@master'
        with:
          nix_path: 'nixpkgs=https://nix-channel-redirect.ocb.msf.org/nixexprs.tar.xz'

      - name: Build the ISO image
        run: >-
          touch ./local/id_tunnel_iso &&
          nix-instantiate
          '<nixpkgs/nixos>'
          -A config.system.build.isoImage
          -I nixos-config='rescue_iso/iso.nix'


  # deploy:
  #   runs-on: 'ubuntu-latest'
  #   needs:
  #     - build
  #     - build_iso
  #   # We only want to deploy when commits have been pushed to master
  #   if: >-
  #     ${{ ! failure() &&
  #         github.event_name == 'push' &&
  #         github.ref == 'refs/heads/master' }}
  #   steps:
  #     - name: Auto-deploy the NixOS config to the requested servers
  #       uses: 'msf-ocb/nixos-deploy@master'
  #       with:
  #         nixos_robot_key: '${{ secrets.NIXOS_ROBOT_KEY }}'
  #         nixos_deploy_service: 'nixos_rebuild_config.service'


